locals {
  # Azure Resource Abbreviations
  # https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-abbreviations  prefixes = {
  prefixes = {
    # AI & Machine Learning
    aISearch                      = "srch",
    azureAIservices               = "ais",
    azureAIFoundryhub             = "hub",
    azureAIFoundryproject         = "proj",
    azureAIVideoIndexer           = "avi",
    azureMachineLearningworkspace = "mlw",
    azureOpenAIService            = "oai",
    botservice                    = "bot",
    computervision                = "cv",
    contentmoderator              = "cm",
    contentsafety                 = "cs",
    customvisionPrediction        = "cstv",
    customvisionTraining          = "cstvt",
    documentintelligence          = "di",
    faceAPI                       = "face",
    healthInsights                = "hi",
    immersivereader               = "ir",
    languageservice               = "lang",
    speechservice                 = "spch",
    translator                    = "trsl",

    # Analytics and IoT
    azureAnalysisServicesserver           = "as",
    azureDatabricksworkspace              = "dbw",
    azureDataExplorercluster              = "dec",
    azureDataExplorerclusterdatabase      = "dedb",
    azureDataFactory                      = "adf",
    azureDigitalTwininstance              = "dt",
    azureStreamAnalytics                  = "asa",
    azureSynapseAnalyticsprivatelinkhub   = "synplh",
    azureSynapseAnalyticsSQLDedicatedPool = "syndp",
    azureSynapseAnalyticsSparkPool        = "synsp",
    azureSynapseAnalyticsworkspaces       = "synw",
    dataLakeStoreaccount                  = "dls",
    dataLakeAnalyticsaccount              = "dla",
    eventHubsnamespace                    = "evhns",
    eventhub                              = "evh",
    eventGriddomain                       = "evgd",
    eventGridsubscriptions                = "evgs",
    eventGridtopic                        = "evgt",
    eventGridsystemtopic                  = "egst",
    hDInsight-Hadoopcluster               = "hadoop",
    hDInsight-HBasecluster                = "hbase",
    hDInsight-Kafkacluster                = "kafka",
    hDInsight-Sparkcluster                = "spark",
    hDInsight-Stormcluster                = "storm",
    hDInsight-MLServicescluster           = "mls",
    ioThub                                = "iot",
    provisioningservices                  = "provs",
    provisioningservicescertificate       = "pcert",
    powerBIEmbedded                       = "pbi",
    timeSeriesInsightsenvironment         = "tsi",

    # Compute and web
    appServiceenvironment                  = "ase",
    appServiceplan                         = "asp",
    azureLoadTestinginstance               = "lt",
    availabilityset                        = "avail",
    azureArcenabledserver                  = "arcs",
    azureArcenabledKubernetescluster       = "arck",
    azureArcprivatelinkscope               = "pls",
    azureArcgateway                        = "arcgw",
    batchaccounts                          = "ba",
    cloudservice                           = "cld",
    communicationServices                  = "acs",
    diskencryptionset                      = "des",
    functionapp                            = "func",
    gallery                                = "gal",
    hostingenvironment                     = "host",
    imagetemplate                          = "it",
    manageddiskOS                          = "osdisk",
    manageddiskData                        = "disk",
    notificationHubs                       = "ntf",
    notificationHubsnamespace              = "ntfns",
    proximityplacementgroup                = "ppg",
    restorepointcollection                 = "rpc",
    snapshot                               = "snap",
    staticwebapp                           = "stapp",
    virtualmachine                         = "vm",
    virtualmachinescaleset                 = "vmss",
    virtualmachinemaintenanceconfiguration = "mc",
    vMstorageaccount                       = "stvm",
    webapp                                 = "app",

    # Containers
    aKScluster                  = "aks",
    aKSsystemnodepool           = "npsystem",
    aKSusernodepool             = "np",
    containerapps               = "ca",
    containerappsenvironment    = "cae",
    containerregistry           = "cr",
    containerinstance           = "ci",
    serviceFabriccluster        = "sf",
    serviceFabricmanagedcluster = "sfmc",

    # Databases
    azureCosmosDBdatabase                  = "cosmos",
    azureCosmosDBforApacheCassandraaccount = "coscas",
    azureCosmosDBforMongoDBaccount         = "cosmon",
    azureCosmosDBforNoSQLaccount           = "cosno",
    azureCosmosDBforTableaccount           = "costab",
    azureCosmosDBforApacheGremlinaccount   = "cosgrm",
    azureCosmosDBPostgreSQLcluster         = "cospos",
    azureCacheforRedisinstance             = "redis",
    azureSQLDatabaseserver                 = "sql",
    azureSQLdatabase                       = "sqldb",
    azureSQLElasticJobagent                = "sqlja",
    azureSQLElasticPool                    = "sqlep",
    mariaDBserver                          = "maria",
    mariaDBdatabase                        = "mariadb",
    mySQLdatabase                          = "mysql",
    postgreSQLdatabase                     = "psql",
    sQLServerStretchDatabase               = "sqlstrdb",
    sQLManagedInstance                     = "sqlmi",

    # Developer tools
    appConfigurationstore = "appcs",
    mapsaccount           = "map",
    signalR               = "sigr",
    webPubSub             = "wps",

    # Dev Ops
    azureManagedGrafana = "amg",

    # Integration
    aPImanagementserviceinstance = "apim",
    integrationaccount           = "ia",
    logicapp                     = "logic",
    serviceBusnamespace          = "sbns",
    serviceBusqueue              = "sbq",
    serviceBustopic              = "sbt",
    serviceBustopicsubscription  = "sbts",

    # Management and governance
    automationaccount                        = "aa",
    azurePolicydefinition                    = "<descriptive>",
    applicationInsights                      = "appi",
    azureMonitoractiongroup                  = "ag",
    azureMonitordatacollectionrule           = "dcr",
    azureMonitoralertprocessingrule          = "apr",
    blueprintPlannedfordeprecation           = "bp",
    blueprintassignmentPlannedfordeprecation = "bpa",
    datacollectionendpoint                   = "dce",
    logAnalyticsworkspace                    = "log",
    logAnalyticsquerypacks                   = "pack",
    managementgroup                          = "mg",
    microsoftPurviewinstance                 = "pview",
    resourcegroup                            = "rg",
    templatespecsname                        = "ts",

    # Migration
    azureMigrateproject              = "migr",
    databaseMigrationServiceinstance = "dms",
    recoveryServicesvault            = "rsv",

    # Networking
    applicationgateway                   = "agw",
    applicationsecuritygroupASG          = "asg",
    cDNprofile                           = "cdnp",
    cDNendpoint                          = "cdne",
    connections                          = "con",
    dNS                                  = "<DNSdomainname>",
    dNSforwardingruleset                 = "dnsfrs",
    dNSprivateresolver                   = "dnspr",
    dNSprivateresolverinboundendpoint    = "in",
    dNSprivateresolveroutboundendpoint   = "out",
    dNSzone                              = "<DNSdomainname>",
    firewall                             = "afw",
    firewallpolicy                       = "afwp",
    expressRoutecircuit                  = "erc",
    expressRoutedirect                   = "erd",
    expressRoutegateway                  = "ergw",
    frontDoorStandardPremiumProfile      = "afd",
    frontDoorStandardPremiumEndpoint     = "fde",
    frontDoorfirewallpolicy              = "fdfp",
    frontDoorClassic                     = "afd",
    iPgroup                              = "ipg",
    loadbalancerInternal                 = "lbi",
    loadbalancerExternal                 = "lbe",
    loadbalancerrule                     = "rule",
    localnetworkgateway                  = "lgw",
    nATgateway                           = "ng",
    networkinterfaceNIC                  = "nic",
    networksecuritygroupNSG              = "nsg",
    networksecuritygroupNSGSecurityrules = "nsgsr",
    networkWatcher                       = "nw",
    privateLink                          = "pl",
    privateendpoint                      = "pep",
    publicIPaddress                      = "pip",
    publicIPaddressprefix                = "ippre",
    routefilter                          = "rf",
    routeserver                          = "rtserv",
    routetable                           = "rt",
    serviceendpointpolicy                = "se",
    trafficManagerprofile                = "traf",
    userdefinedrouteUDR                  = "udr",
    virtualnetwork                       = "vnet",
    virtualnetworkgateway                = "vgw",
    virtualnetworkmanager                = "vnm",
    virtualnetworkpeering                = "peer",
    virtualnetworksubnet                 = "snet",
    virtualWAN                           = "vwan",
    virtualWANHub                        = "vhub",

    # Security
    azureBastion                             = "bas",
    keyvault                                 = "kv",
    keyVaultManagedHSM                       = "kvmhsm",
    managedidentity                          = "id",
    sSHkey                                   = "sshkey",
    vPNGateway                               = "vpng",
    vPNconnection                            = "vcn",
    vPNsite                                  = "vst",
    webApplicationFirewallWAFPolicy          = "waf",
    webApplicationFirewallWAFPolicyrulegroup = "wafrg",

    # Storage
    azureStorSimple        = "ssimp",
    backupVaultname        = "bvault",
    backupVaultpolicy      = "bkpol",
    fileshare              = "share",
    storageaccount         = "st",
    storageSyncServicename = "sss",

    # Virtual desktop infrastructure
    virtualdesktophostpool         = "vdpool",
    virtualdesktopapplicationgroup = "vdag",
    virtualdesktopworkspace        = "vdws",
    virtualdesktopscalingplan      = "vdscaling",

    # CUSTOM
    # https://github.com/Azure/terraform-azurerm-naming/blob/master/resourceDefinition.json
    storageContainer = "stct",
    storageQueue     = "stq",
    storageTable     = "stt"
  }
}